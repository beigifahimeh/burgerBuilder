{"version":3,"sources":["components/order/order.js","containers/orders/orders.js","components/order/order.module.css"],"names":["order","props","ingredients","ingredientsName","push","name","amount","console","log","ingredientOutput","map","ig","style","textTransform","display","margin","border","padding","key","className","classes","price","Orders","this","onFetchOrders","token","userId","orders","loading","id","Component","connect","state","auth","tokenId","dispatch","action","WithErrorHandler","axios","module","exports"],"mappings":"uMAuCeA,EApCD,SAAAC,GACZ,IAAMC,EAAc,GACpB,IAAK,IAAIC,KAAmBF,EAAMC,YAChCA,EAAYE,KAAK,CACfC,KAAMF,EACNG,OAAQ,CAACL,EAAMC,YAAYC,MAE7BI,QAAQC,IAAIN,GAEd,IAAMO,EAAmBP,EAAYQ,KAAI,SAAAC,GACvC,OACE,0BACEC,MAAO,CACLC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,OAEXC,IAAKP,EAAGN,MAEPM,EAAGN,KAVN,KAUcM,EAAGL,OAVjB,QAeJ,OACE,yBAAKa,UAAWC,IAAQpB,OACtB,0CAAgBS,GAChB,oCACQ,wCAAcR,EAAMoB,U,wCC1B5BC,E,4LAOFC,KAAKtB,MAAMuB,cAAcD,KAAKtB,MAAMwB,MAAOF,KAAKtB,MAAMyB,QACtDnB,QAAQC,IAAIe,KAAKtB,MAAMyB,U,+BAGvB,IAAIC,EAAS,kBAAC,IAAD,MAUb,OATKJ,KAAKtB,MAAM2B,UACdD,EAASJ,KAAKtB,MAAM0B,OAAOjB,KAAI,SAAAV,GAAK,OAClC,kBAAC,EAAD,CACEkB,IAAKlB,EAAM6B,GACX3B,YAAaF,EAAME,YACnBmB,MAAOrB,EAAMqB,YAIZ,6BAAMM,O,GArBIG,aAsCNC,uBAdS,SAAAC,GACtB,MAAO,CACLJ,QAASI,EAAMhC,MAAM4B,QACrBD,OAAQK,EAAMhC,MAAM2B,OACpBF,MAAOO,EAAMC,KAAKC,QAClBR,OAAQM,EAAMC,KAAKP,WAGI,SAAAS,GACzB,MAAO,CACLX,cAAe,SAACC,EAAOC,GAAR,OAAmBS,EAASC,IAAkBX,EAAOC,QAIzDK,CAGbM,YAAiBf,EAAQgB,O,mBC/C3BC,EAAOC,QAAU,CAAC,MAAQ","file":"static/js/5.bd0b820a.chunk.js","sourcesContent":["import React from \"react\";\nimport classes from \"./order.module.css\";\n\nconst order = props => {\n  const ingredients = [];\n  for (let ingredientsName in props.ingredients) {\n    ingredients.push({\n      name: ingredientsName,\n      amount: [props.ingredients[ingredientsName]]\n    });\n    console.log(ingredients);\n  }\n  const ingredientOutput = ingredients.map(ig => {\n    return (\n      <span\n        style={{\n          textTransform: \"capitalize\",\n          display: \"inline-block\",\n          margin: \"0 8px\",\n          border: \"1px solid #ccc\",\n          padding: \"5px\"\n        }}\n        key={ig.name}\n      >\n        {ig.name} ({ig.amount})\n      </span>\n    );\n  });\n\n  return (\n    <div className={classes.order}>\n      <p>ingredients:{ingredientOutput}</p>\n      <p>\n        price:<strong> USD:{props.price}</strong>\n      </p>\n    </div>\n  );\n};\n\nexport default order;\n","import React, { Component } from \"react\";\nimport Order from \"../../components/order/order\";\nimport axios from \"../../axios-orders\";\nimport WithErrorHandler from \"../../hoc/WithErrorHandler/WithErrorHandler\";\nimport * as action from \"../../store/actions/index\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../../components/UI/spinner/spinner\";\nclass Orders extends Component {\n  // state = {\n  //   orders: [],\n  //   loading: true\n  // };\n\n  componentDidMount() {\n    this.props.onFetchOrders(this.props.token, this.props.userId);\n    console.log(this.props.userId);\n  }\n  render() {\n    let orders = <Spinner />;\n    if (!this.props.loading) {\n      orders = this.props.orders.map(order => (\n        <Order\n          key={order.id}\n          ingredients={order.ingredients}\n          price={order.price}\n        />\n      ));\n    }\n    return <div>{orders}</div>;\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    loading: state.order.loading,\n    orders: state.order.orders,\n    token: state.auth.tokenId,\n    userId: state.auth.userId\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFetchOrders: (token, userId) => dispatch(action.fetchOrder(token, userId))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WithErrorHandler(Orders, axios));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order\":\"order_order__3S06G\"};"],"sourceRoot":""}